cmake_minimum_required(VERSION 3.8)
project(amss)

set(CMAKE_CXX_STANDARD 11)

set(SOURCE_FILES
        camera/CameraReader.cpp
        camera/CameraReader.h
        camera/DotRecognizer.cpp
        camera/DotRecognizer.h
        camera/ImageRecognizer.cpp
        camera/ImageRecognizer.h
        camera/ImageSender.cpp
        camera/ImageSender.h
        camera/LineRecognizer.cpp
        camera/LineRecognizer.h
        camera/PI3OpencvCompat.h
        camera/SignRecognizer.cpp
        camera/SignRecognizer.h
        camera/SquareRecognizer.cpp
        camera/SquareRecognizer.h
        common/event/EventBase.cpp
        common/event/EventBase.h
        common/event/EventHandlerAdapter.cpp
        common/event/EventHandlerAdapter.h
        common/event/LineRecognizedEvent.cpp
        common/event/LineRecognizedEvent.h
        common/event/LineRecognizedEventHandler.cpp
        common/event/LineRecognizedEventHandler.h
        common/event/RedDotRecognizedEvent.cpp
        common/event/RedDotRecognizedEvent.h
        common/event/RedDotRecognizedEventHandler.cpp
        common/event/RedDotRecognizedEventHandler.h
        common/event/SignRecognizedEvent.cpp
        common/event/SignRecognizedEvent.h
        common/event/SignRecognizedEventHandler.cpp
        common/event/SignRecognizedEventHandler.h
        common/event/SquareRecognizedEvent.cpp
        common/event/SquareRecognizedEvent.h
        common/event/SquareRecognizedEventHandler.cpp
        common/event/SquareRecognizedEventHandler.h
        common/event/WallCollisionEvent.cpp
        common/event/WallCollisionEvent.h
        common/event/WallCollisionEventHandler.cpp
        common/event/WallCollisionEventHandler.h
        common/event/WallSensingEvent.cpp
        common/event/WallSensingEvent.h
        common/event/WallSensingEventHandler.cpp
        common/event/WallSensingEventHandler.h
        common/Constants.h
        common/RecognizerBase.cpp
        common/RecognizerBase.h
        main/AutonomousMovingMode.cpp
        main/AutonomousMovingMode.h
        main/AutonomousPathPlanningMode.cpp
        main/AutonomousPathPlanningMode.h
        main/AutonomousSignRecognitionMode.cpp
        main/AutonomousSignRecognitionMode.h
        main/MainController.cpp
        main/MainController.h
        main/ManualMode.cpp
        main/ManualMode.h
        main/ModeBase.cpp
        main/ModeBase.h
        main/SuspendMode.cpp
        main/SuspendMode.h
        network/NetMessageEventAdapter.h
        network/NetworkManager.cpp
        network/NetworkManager.h
        network/TCPSocket.cpp
        network/TCPSocket.h
        network/UDPSocket.cpp
        network/UDPSocket.h
        sam/MapData.cpp
        sam/MapData.h
        sam/MapRepo.cpp
        sam/MapRepo.h
        sam/MazeGrid.cpp
        sam/MazeGrid.h
        sam/MazeMapper.cpp
        sam/MazeMapper.h
        sam/PathPlanner.cpp
        sam/PathPlanner.h
        sam/WallRecognizer.cpp
        sam/WallRecognizer.h
        sensorreadloop/VL53L0X_API/vl53l0x_api.h
        sensorreadloop/VL53L0X_API/vl53l0x_api_calibration.h
        sensorreadloop/VL53L0X_API/vl53l0x_api_core.h
        sensorreadloop/VL53L0X_API/vl53l0x_api_ranging.h
        sensorreadloop/VL53L0X_API/vl53l0x_api_strings.h
        sensorreadloop/VL53L0X_API/vl53l0x_def.h
        sensorreadloop/VL53L0X_API/vl53l0x_device.h
        sensorreadloop/VL53L0X_API/vl53l0x_i2c_platform.h
        sensorreadloop/VL53L0X_API/vl53l0x_interrupt_threshold_settings.h
        sensorreadloop/VL53L0X_API/vl53l0x_platform.h
        sensorreadloop/VL53L0X_API/vl53l0x_platform_log.h
        sensorreadloop/VL53L0X_API/vl53l0x_tuning.h
        sensorreadloop/VL53L0X_API/vl53l0x_types.h
        sensorreadloop/FlightSensorLeft.cpp
        sensorreadloop/FlightSensorLeft.h
        sensorreadloop/FlightSensorRight.cpp
        sensorreadloop/FlightSensorRight.h
        sensorreadloop/SensorData.cpp
        sensorreadloop/SensorData.h
        sensorreadloop/SensorReader.cpp
        sensorreadloop/SensorReader.h
        sensorreadloop/SonarFront.cpp
        sensorreadloop/SonarFront.h
        sensorreadloop/test.cpp
        servoencoder/BehaviorExecutor.cpp
        servoencoder/BehaviorExecutor.h
        servoencoder/PID.cpp
        servoencoder/PID.h
        servoencoder/ServoEncoder.cpp
        servoencoder/ServoEncoder.h
        servoencoder/testservo.cpp
        main.cpp)

#[[
include_directories(C:\\opencv\\build\\include
        C:\\workspace\\wiringPi\\wiringPi)
add_definitions(-D_WIN32)
#]]

add_executable(amss ${SOURCE_FILES})